auth:
  ## @param auth.createAdminUser Create administrator user on boot
  ##
  createAdminUser: true
  ## @param auth.adminUser Keycloak administrator user
  ##
  adminUser: user
  ## @param auth.adminPassword Keycloak administrator password for the new user
  ##
  adminPassword: "@pisix123"
  ## @param auth.managementUser Wildfly management user
  ##
  managementUser: manager
  ## @param auth.managementPassword Wildfly management password
  ##
  managementPassword: "@pisix123"
proxyAddressForwarding: true
extraStartupArgs: "-Dkeycloak.profile.feature.upload_scripts=enabled"
extraEnvVars:
  - name: KEYCLOAK_FRONTEND_URL
    value: "https://sso.demo.jpgouin.pro/auth"
  - name: PROXY_ADDRESS_FORWARDING
    value: "true"
  - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
    value: "true"
ingress:
  ## @param ingress.enabled Enable ingress record generation for Keycloak
  ##
  enabled: true
  ingressClassName: "apisix"
  hostname: sso.demo.jpgouin.pro
  path: /*
## Service configuration
##
service:
  ## @param service.type Kubernetes service type
  ##
  type: ClusterIP
postgresql:
  enabled: true
  auth:
    username: bn_keycloak
    password: "@pisix123/postgresql"
keycloakConfigCli:
  ## @param keycloakConfigCli.enabled Whether to enable keycloak-config-cli job
  ##
  enabled: false
  configuration: 
    apisix.json: |
      {
        "id": "apisix",
        "realm": "apisix",
        "notBefore": 0,
        "defaultSignatureAlgorithm": "RS256",
        "revokeRefreshToken": false,
        "refreshTokenMaxReuse": 0,
        "accessTokenLifespan": 300,
        "accessTokenLifespanForImplicitFlow": 900,
        "ssoSessionIdleTimeout": 1800,
        "ssoSessionMaxLifespan": 36000,
        "ssoSessionIdleTimeoutRememberMe": 0,
        "ssoSessionMaxLifespanRememberMe": 0,
        "offlineSessionIdleTimeout": 2592000,
        "offlineSessionMaxLifespanEnabled": false,
        "offlineSessionMaxLifespan": 5184000,
        "clientSessionIdleTimeout": 0,
        "clientSessionMaxLifespan": 0,
        "clientOfflineSessionIdleTimeout": 0,
        "clientOfflineSessionMaxLifespan": 0,
        "accessCodeLifespan": 60,
        "accessCodeLifespanUserAction": 300,
        "accessCodeLifespanLogin": 1800,
        "actionTokenGeneratedByAdminLifespan": 43200,
        "actionTokenGeneratedByUserLifespan": 300,
        "oauth2DeviceCodeLifespan": 600,
        "oauth2DevicePollingInterval": 5,
        "enabled": true,
        "sslRequired": "external",
        "registrationAllowed": false,
        "registrationEmailAsUsername": false,
        "rememberMe": false,
        "verifyEmail": false,
        "loginWithEmailAllowed": true,
        "duplicateEmailsAllowed": false,
        "resetPasswordAllowed": false,
        "editUsernameAllowed": false,
        "bruteForceProtected": false,
        "permanentLockout": false,
        "maxFailureWaitSeconds": 900,
        "minimumQuickLoginWaitSeconds": 60,
        "waitIncrementSeconds": 60,
        "quickLoginCheckMilliSeconds": 1000,
        "maxDeltaTimeSeconds": 43200,
        "failureFactor": 30,
        "roles": {
          "realm": [
            {
              "id": "a94a0afd-5ee7-4444-873e-b2d836b62f69",
              "name": "default-roles-apisix",
              "description": "${role_default-roles}",
              "composite": true,
              "composites": {
                "realm": [
                  "offline_access",
                  "uma_authorization"
                ],
                "client": {
                  "account": [
                    "manage-account",
                    "view-profile"
                  ]
                }
              },
              "clientRole": false,
              "containerId": "apisix",
              "attributes": {}
            },
            {
              "id": "ec1ae6b3-d86c-4294-b99f-3e614431dae9",
              "name": "uma_authorization",
              "description": "${role_uma_authorization}",
              "composite": false,
              "clientRole": false,
              "containerId": "apisix",
              "attributes": {}
            },
            {
              "id": "fda3982d-b674-443f-b01b-8b9508162fe9",
              "name": "offline_access",
              "description": "${role_offline-access}",
              "composite": false,
              "clientRole": false,
              "containerId": "apisix",
              "attributes": {}
            }
          ],
          "client": {
            "realm-management": [
              {
                "id": "fc6066a9-2954-4818-a4e0-07555ccc6679",
                "name": "query-groups",
                "description": "${role_query-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "4aeed4ac-7f2c-4572-a73d-998700c9fdd0",
                "name": "query-users",
                "description": "${role_query-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "bc6a873f-c0f0-45f5-a054-d2bfc81b436d",
                "name": "manage-authorization",
                "description": "${role_manage-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "f6b68359-26b8-407c-8c3e-afdd761b512d",
                "name": "manage-clients",
                "description": "${role_manage-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "164c0ee9-d10c-4f0d-ac26-9601a48b9c11",
                "name": "view-identity-providers",
                "description": "${role_view-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "16408572-ca2d-41a1-9aa0-f89b297ca364",
                "name": "manage-users",
                "description": "${role_manage-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "ed8165ba-dcc4-42ae-97f6-69c4cae25397",
                "name": "view-events",
                "description": "${role_view-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "2a4947ad-8fed-4946-9ce1-a35d4fd613ca",
                "name": "query-realms",
                "description": "${role_query-realms}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "ca6311d3-2b3b-48e7-9457-aa0de6919bb1",
                "name": "view-authorization",
                "description": "${role_view-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "b1daf030-b167-4ab8-883e-c7964215b435",
                "name": "manage-identity-providers",
                "description": "${role_manage-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "06939e3d-06d4-4f81-a036-fff1cdb48d69",
                "name": "create-client",
                "description": "${role_create-client}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "3a4bcd4e-2251-453b-af27-60f0a7c24802",
                "name": "view-users",
                "description": "${role_view-users}",
                "composite": true,
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-users",
                      "query-groups"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "a8b8fdb4-8d25-42a4-89f8-5f9474fc0aea",
                "name": "impersonation",
                "description": "${role_impersonation}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "da41a3da-07bd-4294-8307-c72c409df5bb",
                "name": "view-clients",
                "description": "${role_view-clients}",
                "composite": true,
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-clients"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "51adf6c8-85e5-4fec-91c5-3077cb97f7d0",
                "name": "view-realm",
                "description": "${role_view-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "97173bfb-c346-4a36-a7ce-8d4444b976a2",
                "name": "query-clients",
                "description": "${role_query-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "7b1c097b-cfc8-456e-968a-e87b6933b8bf",
                "name": "manage-events",
                "description": "${role_manage-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "cc856db3-8ebc-4dfb-b53e-e4e56d099c73",
                "name": "realm-admin",
                "description": "${role_realm-admin}",
                "composite": true,
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-users",
                      "query-groups",
                      "manage-authorization",
                      "view-identity-providers",
                      "manage-clients",
                      "view-events",
                      "manage-users",
                      "view-authorization",
                      "query-realms",
                      "manage-identity-providers",
                      "create-client",
                      "view-users",
                      "view-realm",
                      "view-clients",
                      "impersonation",
                      "query-clients",
                      "manage-events",
                      "manage-realm"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              },
              {
                "id": "91e95e19-7e32-40b2-878c-cdb20c8773a8",
                "name": "manage-realm",
                "description": "${role_manage-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
                "attributes": {}
              }
            ],
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
              {
                "id": "c5b8860a-42ed-4c6b-bd31-d99de2414cc6",
                "name": "read-token",
                "description": "${role_read-token}",
                "composite": false,
                "clientRole": true,
                "containerId": "27405ab9-700e-44cc-a2c0-81b1f4df691a",
                "attributes": {}
              }
            ],
            "poc-apisix": [
              {
                "id": "3d16db74-0746-44fe-b107-5bb24e7dedc0",
                "name": "uma_protection",
                "composite": false,
                "clientRole": true,
                "containerId": "d9e846a7-3b95-41c2-9e50-7da219b483ed",
                "attributes": {}
              }
            ],
            "account": [
              {
                "id": "e1ccbbba-10f2-47ad-b5f2-49bd1d1b6174",
                "name": "manage-account",
                "description": "${role_manage-account}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "manage-account-links"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "937fc909-0e47-4cd8-afce-9e0eee9fd360",
                "attributes": {}
              },
              {
                "id": "a9ca26a4-4c58-4b62-be53-aa99cf2093aa",
                "name": "manage-consent",
                "description": "${role_manage-consent}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "view-consent"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "937fc909-0e47-4cd8-afce-9e0eee9fd360",
                "attributes": {}
              },
              {
                "id": "3ca19e76-8302-49c6-b0c4-4b24e3d1009f",
                "name": "manage-account-links",
                "description": "${role_manage-account-links}",
                "composite": false,
                "clientRole": true,
                "containerId": "937fc909-0e47-4cd8-afce-9e0eee9fd360",
                "attributes": {}
              },
              {
                "id": "e7b95fb0-6f15-4c06-afa0-2d62220f646c",
                "name": "delete-account",
                "description": "${role_delete-account}",
                "composite": false,
                "clientRole": true,
                "containerId": "937fc909-0e47-4cd8-afce-9e0eee9fd360",
                "attributes": {}
              },
              {
                "id": "dc29e0d4-5290-44b6-92e8-4a6da984d73d",
                "name": "view-consent",
                "description": "${role_view-consent}",
                "composite": false,
                "clientRole": true,
                "containerId": "937fc909-0e47-4cd8-afce-9e0eee9fd360",
                "attributes": {}
              },
              {
                "id": "b2357328-49ec-47cf-a5df-70cba73cd091",
                "name": "view-applications",
                "description": "${role_view-applications}",
                "composite": false,
                "clientRole": true,
                "containerId": "937fc909-0e47-4cd8-afce-9e0eee9fd360",
                "attributes": {}
              },
              {
                "id": "6bb0b79a-ea99-4b03-8939-0ca64cd39dbf",
                "name": "view-profile",
                "description": "${role_view-profile}",
                "composite": false,
                "clientRole": true,
                "containerId": "937fc909-0e47-4cd8-afce-9e0eee9fd360",
                "attributes": {}
              }
            ]
          }
        },
        "groups": [
          {
            "id": "4530105b-8cca-416b-9a52-f3e2cba51dcf",
            "name": "author",
            "path": "/author",
            "attributes": {},
            "realmRoles": [],
            "clientRoles": {},
            "subGroups": []
          },
          {
            "id": "7b6d0509-6072-43ff-a666-2486b539edf1",
            "name": "editor",
            "path": "/editor",
            "attributes": {},
            "realmRoles": [],
            "clientRoles": {},
            "subGroups": []
          }
        ],
        "defaultRole": {
          "id": "a94a0afd-5ee7-4444-873e-b2d836b62f69",
          "name": "default-roles-apisix",
          "description": "${role_default-roles}",
          "composite": true,
          "clientRole": false,
          "containerId": "apisix"
        },
        "requiredCredentials": [
          "password"
        ],
        "otpPolicyType": "totp",
        "otpPolicyAlgorithm": "HmacSHA1",
        "otpPolicyInitialCounter": 0,
        "otpPolicyDigits": 6,
        "otpPolicyLookAheadWindow": 1,
        "otpPolicyPeriod": 30,
        "otpSupportedApplications": [
          "FreeOTP",
          "Google Authenticator"
        ],
        "webAuthnPolicyRpEntityName": "keycloak",
        "webAuthnPolicySignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyRpId": "",
        "webAuthnPolicyAttestationConveyancePreference": "not specified",
        "webAuthnPolicyAuthenticatorAttachment": "not specified",
        "webAuthnPolicyRequireResidentKey": "not specified",
        "webAuthnPolicyUserVerificationRequirement": "not specified",
        "webAuthnPolicyCreateTimeout": 0,
        "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyAcceptableAaguids": [],
        "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
        "webAuthnPolicyPasswordlessSignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyPasswordlessRpId": "",
        "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
        "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
        "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
        "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
        "webAuthnPolicyPasswordlessCreateTimeout": 0,
        "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyPasswordlessAcceptableAaguids": [],
        "users": [
          {
            "id": "58a158a0-5dc8-4d4a-b907-0c337452c5c6",
            "createdTimestamp": 1648827673946,
            "username": "service-account-poc-apisix",
            "enabled": true,
            "totp": false,
            "emailVerified": false,
            "serviceAccountClientId": "poc-apisix",
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "default-roles-apisix"
            ],
            "clientRoles": {
              "poc-apisix": [
                "uma_protection"
              ]
            },
            "notBefore": 0,
            "groups": []
          }
        ],
        "scopeMappings": [
          {
            "clientScope": "offline_access",
            "roles": [
              "offline_access"
            ]
          }
        ],
        "clientScopeMappings": {
          "account": [
            {
              "client": "account-console",
              "roles": [
                "manage-account"
              ]
            }
          ]
        },
        "clients": [
          {
            "id": "937fc909-0e47-4cd8-afce-9e0eee9fd360",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/apisix/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/apisix/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "72f2c211-5b12-4cdf-a62e-99e99d23d0ea",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/apisix/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/apisix/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "4b16879a-d655-4e61-a21a-fbb4cae78674",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "d9bfe78f-69ec-404c-b4c4-fd547bb5ac46",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "27405ab9-700e-44cc-a2c0-81b1f4df691a",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "d9e846a7-3b95-41c2-9e50-7da219b483ed",
            "clientId": "poc-apisix",
            "rootUrl": "https://book-app.demo.jpgouin.pro",
            "adminUrl": "https://book-app.demo.jpgouin.pro",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [
              "https://book-app.demo.jpgouin.pro/*"
            ],
            "webOrigins": [
              "https://book-app.demo.jpgouin.pro"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": true,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": true,
            "authorizationServicesEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "id.token.as.detached.signature": "false",
              "saml.assertion.signature": "false",
              "saml.force.post.binding": "false",
              "saml.multivalued.roles": "false",
              "saml.encrypt": "false",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false",
              "saml.server.signature": "false",
              "saml.server.signature.keyinfo.ext": "false",
              "use.refresh.tokens": "true",
              "exclude.session.state.from.auth.response": "false",
              "oidc.ciba.grant.enabled": "false",
              "saml.artifact.binding": "false",
              "backchannel.logout.session.required": "true",
              "client_credentials.use_refresh_token": "false",
              "saml_force_name_id_format": "false",
              "require.pushed.authorization.requests": "false",
              "saml.client.signature": "false",
              "tls.client.certificate.bound.access.tokens": "false",
              "saml.authnstatement": "false",
              "display.on.consent.screen": "false",
              "saml.onetimeuse.condition": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
              {
                "id": "024be25a-f74a-4e71-96bd-c658c544b667",
                "name": "Client Host",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "clientHost",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "clientHost",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "1fc77eac-e4e3-4340-ab21-d91a3a765899",
                "name": "Client IP Address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "clientAddress",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "clientAddress",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "e1d93d22-dfec-4205-a9d9-a8cfd3097a21",
                "name": "Client ID",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "clientId",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "clientId",
                  "jsonType.label": "String"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ],
            "authorizationSettings": {
              "allowRemoteResourceManagement": true,
              "policyEnforcementMode": "ENFORCING",
              "resources": [
                {
                  "name": "Default Resource",
                  "type": "urn:poc-apisix:resources:default",
                  "ownerManagedAccess": false,
                  "attributes": {},
                  "_id": "803134b7-f1ec-40b4-ad97-bdf154cd3aaa",
                  "uris": [
                    "/*"
                  ]
                }
              ],
              "policies": [
                {
                  "id": "8138e528-2779-4dcd-93c2-411ef3ef543d",
                  "name": "Default Policy",
                  "description": "A policy that grants access only for users within this realm",
                  "type": "js",
                  "logic": "POSITIVE",
                  "decisionStrategy": "AFFIRMATIVE",
                  "config": {
                    "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
                  }
                },
                {
                  "id": "bb31e484-d07b-4982-9700-6c2b949ab09d",
                  "name": "Default Permission",
                  "description": "A permission that applies to the default resource type",
                  "type": "resource",
                  "logic": "POSITIVE",
                  "decisionStrategy": "UNANIMOUS",
                  "config": {
                    "defaultResourceType": "urn:poc-apisix:resources:default",
                    "applyPolicies": "[\"Default Policy\"]"
                  }
                }
              ],
              "scopes": [],
              "decisionStrategy": "UNANIMOUS"
            }
          },
          {
            "id": "8ed59e0c-316b-4328-a33e-1aa82b425b40",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "9f982ab3-07fb-429e-a0b8-c2b9dad43c45",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/apisix/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/admin/apisix/console/*"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "b83d989b-909d-4501-9395-20348a2e3c77",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          }
        ],
        "clientScopes": [
          {
            "id": "2235c322-95b1-4aa4-919b-046f4297b28b",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "0f27fc08-27dc-48b0-b01c-5008978217bd",
                "name": "family name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "lastName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "family_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "49445223-1371-43c4-b7ff-c9ba2b2e9fb4",
                "name": "given name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "firstName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "given_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "9e04d507-e8ae-44f8-9e9a-631f3a20192b",
                "name": "middle name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "middleName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "middle_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "55195758-1041-4df3-a74c-a3c2c45822e6",
                "name": "nickname",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "nickname",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "nickname",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "3729141f-aa99-4531-8b5f-4dab40ed47b1",
                "name": "birthdate",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "birthdate",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "birthdate",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "592ca0b3-fe4e-4b20-a4f7-4d1236539686",
                "name": "full name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-full-name-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "id": "bea7d7a5-e178-41bc-aa1f-b078df54d377",
                "name": "website",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "website",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "website",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "7f94a0d3-4dff-49e6-95ab-ce9fe98f14b2",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "e081eec7-7505-40be-ac77-ba7ec9367875",
                "name": "zoneinfo",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "zoneinfo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "zoneinfo",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "991c8df9-c529-41db-a595-8c0033dc46c9",
                "name": "picture",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "picture",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "picture",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "dfd1584b-21d9-4822-86ab-eee5635028f4",
                "name": "updated at",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "updatedAt",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "updated_at",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "ddbdc658-858b-42ad-a676-71fb4ed65061",
                "name": "profile",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "profile",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "profile",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "0a36dc15-5f76-4acf-b5f3-831bcc19c236",
                "name": "username",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "preferred_username",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "534c1297-1b45-4ed5-b50d-a57bd7e4d7b1",
                "name": "gender",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "gender",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "gender",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "36a136ea-84c8-4e02-8f3c-16c9ad43be3f",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "4f486a0e-cda4-4f6e-8d0f-4b983a4f5de7",
                "name": "client roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-client-role-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "resource_access.${client_id}.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              },
              {
                "id": "1a4904da-2a27-42f3-84fc-84333534fe10",
                "name": "realm roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "realm_access.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              },
              {
                "id": "18bed9b0-eea2-41d1-bf71-32a165d96a96",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {}
              }
            ]
          },
          {
            "id": "bd195e9a-9fab-452b-b48d-523fc53ce0b6",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false",
              "consent.screen.text": ""
            },
            "protocolMappers": [
              {
                "id": "d26fbbc5-f625-4fa5-96a7-24db002dc9a3",
                "name": "allowed web origins",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-allowed-origins-mapper",
                "consentRequired": false,
                "config": {}
              }
            ]
          },
          {
            "id": "6a42ede5-bedc-4d15-ac2c-8085544f7c1f",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
              "consent.screen.text": "${samlRoleListScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "id": "de7acebc-1dda-4ac5-ad45-64f423583928",
                "name": "role list",
                "protocol": "saml",
                "protocolMapper": "saml-role-list-mapper",
                "consentRequired": false,
                "config": {
                  "single": "false",
                  "attribute.nameformat": "Basic",
                  "attribute.name": "Role"
                }
              }
            ]
          },
          {
            "id": "04210f53-9717-4c2a-82d7-36b80df643de",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "6836cf13-cdf4-4ad1-8469-a981d2740204",
                "name": "phone number verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumberVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number_verified",
                  "jsonType.label": "boolean"
                }
              },
              {
                "id": "8d412fdf-68f9-43bb-a766-682a0d305c4e",
                "name": "phone number",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumber",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "1531a1b7-1710-4e5b-be55-b28d193ed352",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
              "consent.screen.text": "${offlineAccessScopeConsentText}",
              "display.on.consent.screen": "true"
            }
          },
          {
            "id": "efd5b0ec-13d1-4777-a9bc-0e23c21b0e2a",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "c4e57f89-0bbd-414f-af17-bc638eb6011f",
                "name": "email",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "email",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "3731b9d5-5927-4b8f-9bb0-6e1ef2b1cd70",
                "name": "email verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "emailVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          },
          {
            "id": "4fc56596-31e0-4a91-aea4-7c55d32850ac",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "f650bd78-5f07-48d1-8a5d-c6661079b97f",
                "name": "groups",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "multivalued": "true",
                  "user.attribute": "foo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "66cc6efe-c511-4226-a1d0-17b8225d086a",
                "name": "upn",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "upn",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "2f6359f2-b80f-4213-abc5-8699a820df01",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "d24fe3ff-1d27-40d2-b0ec-5dd711cc6fa2",
                "name": "address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-address-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute.formatted": "formatted",
                  "user.attribute.country": "country",
                  "user.attribute.postal_code": "postal_code",
                  "userinfo.token.claim": "true",
                  "user.attribute.street": "street",
                  "id.token.claim": "true",
                  "user.attribute.region": "region",
                  "access.token.claim": "true",
                  "user.attribute.locality": "locality"
                }
              }
            ]
          }
        ],
        "defaultDefaultClientScopes": [
          "role_list",
          "profile",
          "email",
          "roles",
          "web-origins"
        ],
        "defaultOptionalClientScopes": [
          "offline_access",
          "address",
          "phone",
          "microprofile-jwt"
        ],
        "browserSecurityHeaders": {
          "contentSecurityPolicyReportOnly": "",
          "xContentTypeOptions": "nosniff",
          "xRobotsTag": "none",
          "xFrameOptions": "SAMEORIGIN",
          "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
          "xXSSProtection": "1; mode=block",
          "strictTransportSecurity": "max-age=31536000; includeSubDomains"
        },
        "smtpServer": {},
        "eventsEnabled": false,
        "eventsListeners": [
          "jboss-logging"
        ],
        "enabledEventTypes": [],
        "adminEventsEnabled": false,
        "adminEventsDetailsEnabled": false,
        "identityProviders": [],
        "identityProviderMappers": [],
        "components": {
          "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
              "id": "d6091e15-bef6-4635-9e4f-e1c870db9785",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "oidc-address-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "saml-user-property-mapper",
                  "oidc-full-name-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "saml-role-list-mapper",
                  "oidc-usermodel-property-mapper",
                  "saml-user-attribute-mapper"
                ]
              }
            },
            {
              "id": "09243beb-1c93-47c3-8f4b-e331f1b9d861",
              "name": "Consent Required",
              "providerId": "consent-required",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "bafd767d-de40-4be8-8302-c1fd34c0b3f1",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "oidc-usermodel-property-mapper",
                  "saml-role-list-mapper",
                  "oidc-full-name-mapper",
                  "saml-user-attribute-mapper",
                  "oidc-address-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "saml-user-property-mapper",
                  "oidc-sha256-pairwise-sub-mapper"
                ]
              }
            },
            {
              "id": "165753aa-f9a7-47f3-843d-78cb240f4a8d",
              "name": "Trusted Hosts",
              "providerId": "trusted-hosts",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "host-sending-registration-request-must-match": [
                  "true"
                ],
                "client-uris-must-match": [
                  "true"
                ]
              }
            },
            {
              "id": "7f7adee2-1746-4417-a4a9-67d095f7afee",
              "name": "Max Clients Limit",
              "providerId": "max-clients",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "max-clients": [
                  "200"
                ]
              }
            },
            {
              "id": "b8ab1e34-9b9a-4cd4-8554-847ce9ad6ec1",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "4a3930d0-632c-40cc-9fd5-857b43d7da42",
              "name": "Full Scope Disabled",
              "providerId": "scope",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "68a96b28-9a4f-4846-b3cd-ab01e9f57922",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            }
          ],
          "org.keycloak.userprofile.UserProfileProvider": [
            {
              "id": "fec80672-78fd-40d2-8b88-cf5e1643fd40",
              "providerId": "declarative-user-profile",
              "subComponents": {},
              "config": {}
            }
          ],
          "org.keycloak.keys.KeyProvider": [
            {
              "id": "e758ce37-263a-49b2-befe-69e4eae341e1",
              "name": "rsa-enc-generated",
              "providerId": "rsa-enc-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "RSA-OAEP"
                ]
              }
            },
            {
              "id": "4769364d-7c3c-4574-90d1-1e2d2f04079f",
              "name": "aes-generated",
              "providerId": "aes-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ]
              }
            },
            {
              "id": "af3b8598-9d8c-4af6-82f5-a6f126caa376",
              "name": "rsa-generated",
              "providerId": "rsa-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ]
              }
            },
            {
              "id": "acc09f75-44b2-4a2c-8d2f-371a543012e8",
              "name": "hmac-generated",
              "providerId": "hmac-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "HS256"
                ]
              }
            }
          ]
        },
        "internationalizationEnabled": false,
        "supportedLocales": [],
        "authenticationFlows": [
          {
            "id": "82aeb0e5-3d26-4610-8767-21abdbe2667b",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-email-verification",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "flowAlias": "Verify Existing Account by Re-authentication",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "a6ac24d4-8a0b-4e78-81b9-165f919829f5",
            "alias": "Authentication Options",
            "description": "Authentication options.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "basic-auth",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "basic-auth-otp",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 30,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "9738a8ba-7e35-4ca5-8aff-e0cbfdfe7be8",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "e5037bb9-f55c-4acf-b89b-79971d1872c4",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "direct-grant-validate-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "6de71914-936a-4ba8-8394-990941272668",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "fbc640f7-58bf-44b6-835a-6dff6b223da4",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-confirm-link",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "flowAlias": "Account verification options",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "ae830bd1-0395-4f74-80b4-438297a595bf",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "reset-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "fc9d5e20-9c0e-4968-a050-c6fe3f312063",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "create unique user config",
                "authenticator": "idp-create-user-if-unique",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "flowAlias": "Handle Existing Account",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "b1e43896-4c81-4d2e-970e-6fdd8a0309e2",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "flowAlias": "First broker login - Conditional OTP",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "d83dc9a3-71ad-471d-b1bd-a304e14c3089",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-cookie",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "identity-provider-redirector",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 25,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "flowAlias": "forms",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "fe06621c-dcf4-429f-9c81-b3de8866c240",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "client-secret",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "client-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "client-secret-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "client-x509",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 40,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "47795e13-f09a-493a-81a1-819fc9fbd84e",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "direct-grant-validate-username",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "direct-grant-validate-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 30,
                "flowAlias": "Direct Grant - Conditional OTP",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "136cad14-9764-43c4-a190-b55ef70a19e3",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "docker-http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "de194079-c902-4e2c-925f-0368250ba300",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "review profile config",
                "authenticator": "idp-review-profile",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "flowAlias": "User creation or linking",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "2d23689a-8afa-4680-b1e5-ceff2868522d",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "flowAlias": "Browser - Conditional OTP",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "cb421a0b-d15d-4325-af1e-3e75946ff46f",
            "alias": "http challenge",
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "no-cookie-redirect",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "flowAlias": "Authentication Options",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "3168f56a-b941-49a2-9775-673fa396f93f",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-page-form",
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 10,
                "flowAlias": "registration form",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "a42b088e-0cc1-44d5-a5a8-d19d55f590bc",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-user-creation",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "registration-profile-action",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 40,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "registration-password-action",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 50,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "registration-recaptcha-action",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 60,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "14500b02-59f4-4983-88f4-5d286b215cac",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "reset-credentials-choose-user",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "reset-credential-email",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "reset-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 30,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 40,
                "flowAlias": "Reset - Conditional OTP",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "6ad9fade-a17d-41a7-85ab-fcf6df42a92c",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          }
        ],
        "authenticatorConfig": [
          {
            "id": "75632081-dcca-4ee1-b7f6-e305fd4ecc5e",
            "alias": "create unique user config",
            "config": {
              "require.password.update.after.registration": "false"
            }
          },
          {
            "id": "219b6662-ffa8-46f8-adfc-e067573acb5f",
            "alias": "review profile config",
            "config": {
              "update.profile.on.first.login": "missing"
            }
          }
        ],
        "requiredActions": [
          {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
          },
          {
            "alias": "terms_and_conditions",
            "name": "Terms and Conditions",
            "providerId": "terms_and_conditions",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
          },
          {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
          },
          {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
          },
          {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
          },
          {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
          },
          {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
          }
        ],
        "browserFlow": "browser",
        "registrationFlow": "registration",
        "directGrantFlow": "direct grant",
        "resetCredentialsFlow": "reset credentials",
        "clientAuthenticationFlow": "clients",
        "dockerAuthenticationFlow": "docker auth",
        "attributes": {
          "cibaBackchannelTokenDeliveryMode": "poll",
          "cibaExpiresIn": "120",
          "cibaAuthRequestedUserHint": "login_hint",
          "oauth2DeviceCodeLifespan": "600",
          "oauth2DevicePollingInterval": "5",
          "clientOfflineSessionMaxLifespan": "0",
          "clientSessionIdleTimeout": "0",
          "parRequestUriLifespan": "60",
          "clientSessionMaxLifespan": "0",
          "clientOfflineSessionIdleTimeout": "0",
          "cibaInterval": "5"
        },
        "keycloakVersion": "16.1.1",
        "userManagedAccessAllowed": false,
        "clientProfiles": {
          "profiles": []
        },
        "clientPolicies": {
          "policies": []
        }
      }
